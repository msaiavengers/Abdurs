
@staticmethod
def create_view(view_name, view_template, owner_id, view_type):
    """Create a new view in the database and return the generated view ID."""
    with TcaHubDAO.get_db_connection() as conn:
        with conn.cursor() as cursor:
            cursor.execute(
                """
                INSERT INTO tcahub_views (view_name, view_template, owner_id, view_type)
                VALUES (%s, %s::jsonb, %s, %s) RETURNING view_id;
                """,
                (view_name, json.dumps(view_template), owner_id, view_type)  # Convert dict to JSON string
            )
            conn.commit()
            result = cursor.fetchone()
            return result["view_id"] if result else None  # Safer handling



@staticmethod
def update_view(view_id, view_name=None, view_template=None, view_type=None):
    """Update details for an existing view, leaving any fields unchanged if not provided."""
    with TcaHubDAO.get_db_connection() as conn:
        with conn.cursor() as cursor:
            updates = []
            params = []

            if view_name:
                updates.append("view_name = %s")
                params.append(view_name)

            if view_template:
                updates.append("view_template = %s::jsonb")  # Ensure JSONB storage
                params.append(json.dumps(view_template))  # Convert dict to JSON string

            if view_type:
                updates.append("view_type = %s")
                params.append(view_type)

            if not updates:  # No updates provided, return early
                return False

            params.append(view_id)  # Append view_id at the end for WHERE condition
            query = f"""
                UPDATE tcahub_views 
                SET {', '.join(updates)}, updated_at = NOW() 
                WHERE view_id = %s
            """
            cursor.execute(query, tuple(params))
            conn.commit()
            return cursor.rowcount > 0
