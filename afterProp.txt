tasks.named("reportScoverage") {
    doFirst {
        if (mainClass.isPresent()) {
            println("mainClass is already set: ${mainClass.get()}, skipping reassignment.")
        } else {
            println("Setting mainClass for reportScoverage")
            mainClass.set("com.ms.ied.mswatch.MSWatch")
        }
    }
}


afterEvaluate {
    tasks.withType(JavaExec).configureEach {
        if (name.contains("scoverage")) {
            if (mainClass.isPresent()) {
                throw new GradleException("mainClass is already set to '${mainClass.get()}' after evaluation for task: $name")
            } else {
                mainClass.set("com.example.MainClass")
            }
        }
    }
}
tasks.named("reportScoverage") {
    doFirst {
        if (mainClass.orNull == null) {
            mainClass.set("com.example.MainClass")
            println("Setting mainClass for reportScoverage")
        } else {
            println("mainClass is already set, skipping")
        }
    }
}

tasks.named("test") {
    finalizedBy("reportScoverage")
}

tasks.named("reportScoverage") {
    doFirst {
        if (mainClass.orNull == null) {
            mainClass.set("com.example.MainClass")
            println("Setting mainClass for reportScoverage")
        } else {
            println("mainClass is already set, skipping")
        }
    }
}
