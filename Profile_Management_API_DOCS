
@app.get("/docs/readme")
async def get_readme():
    readme_path = os.path.join(os.path.dirname(__file__), "README.md")
    return FileResponse(readme_path, media_type="text/markdown")

# Report API Documentation

## Overview

These are the `reportNames` that can be called from the UI. To test, we have exposed the `/runReportSwagger` endpoint.

## Available Reports

| Report Name                                             | Handler Function                        |
| ------------------------------------------------------- | --------------------------------------- |
| `GET_VIEW_BY_VIEW_ID`                                   | `handle_get_view`                       |
| `GET_VIEWS_BY_OWNER_ID`                                 | `handle_get_views_by_owner`             |
| `GET_VIEW_WITH_SHARES_BY_VIEW_ID`                       | `handle_get_view_with_shares`           |
| `GET_VIEWS_WITH_SHARES_BY_OWNER_ID`                     | `handle_get_views_with_shares_by_owner` |
| `GET_VIEWS_SHARED_BY_SHARED_TO`                         | `handle_get_shared_views`               |
| `GET_VIEWS_BY_OWNER_ID_SHARED_WITH_LIST_GROUP_OPTIONAL` | `handle_get_all_views_for_user`         |
| `CREATE_VIEW`                                           | `handle_create_view`                    |
| `SHARE_VIEW`                                            | `handle_create_share_view`              |
| `CLONE_SHARE_VIEW_BY_VIEW_ID_TO_NEW_OWNER_ID`           | `handle_clone_shared_view`              |
| `UPDATE_VIEW`                                           | `handle_update_view`                    |
| `DELETE_VIEW`                                           | `handle_delete_view`                    |
| `DELETE_SHARES`                                         | `handle_delete_shares`                  |

## Attribute Constraints

- **ViewType** must be one of: `"template"`, `"view"`, or `"dataset"`
- **TargetType** must be one of: `"USER"` or `"GROUP"`

## API Endpoints

### GET\_VIEW\_BY\_VIEW\_ID

#### Summary

Retrieve details of a specific view by its ID.

#### Request Parameters

```json
{
    "reportName": "GET_VIEW_BY_VIEW_ID",
    "reportParams": "{\"Param\":[{\"name\":\"view_id\",\"value\":\"1\"}]}"
}
```

#### CURL Command

```sh
curl -X 'POST' \
  'shehzada_local_endpointrunReportSwagger' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
    "reportName": "GET_VIEW_BY_VIEW_ID",
    "reportParams": "{\"Param\":[{\"name\":\"view_id\",\"value\":\"1\"}]}"
}'
```

### GET\_VIEWS\_BY\_OWNER\_ID

#### Summary

Retrieve all views owned by a specific user.

#### Request Parameters

```json
{
    "reportName": "GET_VIEWS_BY_OWNER_ID",
    "reportParams": "{\"Param\":[{\"name\":\"owner_id\",\"value\":\"shehzada\"}]}"
}
```

#### CURL Command

```sh
curl -X 'POST' \
  'shehzada_local_endpointrunReportSwagger' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
    "reportName": "GET_VIEWS_BY_OWNER_ID",
    "reportParams": "{\"Param\":[{\"name\":\"owner_id\",\"value\":\"shehzada\"}]}"
}'
```

### GET\_VIEW\_WITH\_SHARES\_BY\_VIEW\_ID

#### Summary

Retrieve a view along with its share details.

#### Request Parameters

```json
{
    "reportName": "GET_VIEW_WITH_SHARES_BY_VIEW_ID",
    "reportParams": "{\"Param\":[{\"name\":\"view_id\",\"value\":\"1\"}]}"
}
```

#### CURL Command

```sh
curl -X 'POST' \
  'shehzada_local_endpointrunReportSwagger' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
    "reportName": "GET_VIEW_WITH_SHARES_BY_VIEW_ID",
    "reportParams": "{\"Param\":[{\"name\":\"view_id\",\"value\":\"1\"}]}"
}'
```

### CREATE\_VIEW

#### Summary

Creates a new view entry and returns the generated `view_id`.

#### Request Parameters

```json
{
  "reportName": "CREATE_VIEW",
  "reportParams": "{\"Param\": [{\"name\": \"view_name\", \"value\": \"EU JPM Q1 Report\"}, {\"name\": \"view_template\", \"value\": \"{\\\"tnl\\\": \\\"TNL0001234\\\", \\\"strategey\\\": \\\"vwap\\\"}\"}, {\"name\": \"owner_id\", \"value\": \"haridass\"}, {\"name\": \"view_type\", \"value\": \"dataset\"}]}
}
```

#### CURL Command

```sh
curl -X 'POST' \
  'shehzada_local_endpointrunReportSwagger' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
  "reportName": "CREATE_VIEW",
  "reportParams": "{\"Param\": [{\"name\": \"view_name\", \"value\": \"EU JPM Q1 Report\"}, {\"name\": \"view_template\", \"value\": \"{\\\"tnl\\\": \\\"TNL0001234\\\", \\\"strategey\\\": \\\"vwap\\\"}\"}, {\"name\": \"owner_id\", \"value\": \"haridass\"}, {\"name\": \"view_type\", \"value\": \"dataset\"}]}
}'
```

### SHARE\_VIEW

#### Summary

Share a view with a user or group and return the generated `shared_id`.

#### Request Parameters

```json
{
  "reportName": "SHARE_VIEW",
  "reportParams": "{\"Param\": [{\"name\": \"view_id\", \"value\": \"13\"}, {\"name\": \"shared_to\", \"value\": \"cash_eu\"}, {\"name\": \"target_type\", \"value\": \"GROUP\"}]}
}
```

#### CURL Command

```sh
curl -X 'POST' \
  'shehzada_local_endpointrunReportSwagger' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
  "reportName": "SHARE_VIEW",
  "reportParams": "{\"Param\": [{\"name\": \"view_id\", \"value\": \"12\"}, {\"name\": \"shared_to\", \"value\": \"cash_eu\"}, {\"name\": \"target_type\", \"value\": \"GROUP\"}]}
}'
```

---

This document continues with details on `CLONE_SHARE_VIEW_BY_VIEW_ID_TO_NEW_OWNER_ID`, `UPDATE_VIEW`, `DELETE_VIEW`, and `DELETE_SHARES`.

For more details, refer to the full API documentation.

