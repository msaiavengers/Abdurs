# readme.py
import os
import re
import markdown

def generate_readme_html():
    readme_path = os.path.join(os.path.dirname(__file__), "PROFILE_MANAGEMENT_API_README.md")
    with open(readme_path, "r", encoding="utf-8") as f:
        content = f.read()

    # Process table links before markdown conversion
    def add_links_to_table(match):
        report_name = match.group(1).strip('`')
        handler_func = match.group(2).strip('`')
        return f"| [{report_name}](#{''.join(report_name.lower().split('_'))}) | {handler_func} |"

    # Find the table and add links to report names
    pattern = r"\| `([A-Z_]+)` \| `([a-z_]+)` \|"
    content = re.sub(pattern, add_links_to_table, content)

    # Convert Markdown to HTML with extensions
    html_content = markdown.markdown(
        content,
        extensions=["tables", "fenced_code", "codehilite"]
    )

    # Simple HTML template with built-in styling
    html_template = f"""
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Report API Documentation</title>
        <!-- GitHub Markdown CSS -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.2.0/github-markdown-light.min.css">
        <!-- Code highlighting CSS -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github.min.css">
        <style>
            body {{
                max-width: 980px;
                margin: 0 auto;
                padding: 45px;
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
            }}
            
            table {{
                border-collapse: collapse;
                width: 100%;
                margin: 16px 0;
            }}
            
            table th, table td {{
                border: 1px solid #dfe2e5;
                padding: 8px 13px;
            }}
            
            table tr:nth-child(even) {{
                background-color: #f8f8f8;
            }}
            
            pre {{
                background-color: #f6f8fa;
                border-radius: 6px;
                padding: 16px;
                overflow: auto;
            }}
            
            @media (max-width: 767px) {{
                body {{
                    padding: 15px;
                }}
            }}
        </style>
    </head>
    <body class="markdown-body">
        {html_content}
        
        <!-- Highlight.js for code highlighting -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
        <script>hljs.highlightAll();</script>
    </body>
    </html>
    """
    
    return html_template


# main.py
from fastapi import FastAPI
from fastapi.responses import HTMLResponse
from readme import generate_readme_html  # Import the function from readme.py

app = FastAPI()

@app.get("/docs/readme", response_class=HTMLResponse)
async def get_readme():
    html_content = generate_readme_html()  # Call the function from readme.py
    return HTMLResponse(content=html_content)
